@page "/updatePets"
@page "/updatePets/{id:int}"
@inject IPetService PetService
@inject IStateService StateService
@inject IUserAccountService UserAccountService

@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<h3>Update Pet from Database</h3>


<EditForm Model="pet" OnSubmit="HandleSubmit" FormName="UpdatePet">
    <label for="Type">Type</label>
    <InputText @bind-Value="pet.Type">@pet.Type</InputText>
        <br />
        <label for="Breed">Breed</label>
        <InputText @bind-Value="pet.Breed">@pet.Breed</InputText>
        <br />
        <label for="Age">Age</label>
        <InputNumber @bind-Value="pet.Age">@pet.Age</InputNumber>
        <br />
        <label for="DateAvailable">Date Available</label>
        <InputText @bind-Value="pet.DateAvailable">@pet.DateAvailable</InputText>
        <br />
        <label for="Price">Price</label>
        <InputNumber @bind-Value="pet.Price">@pet.Price</InputNumber>
        <br />
        <label for="Name">Name</label>
        <InputText @bind-Value="pet.Name">@pet.Name</InputText>
        <br />
        <label for="ImgURL">Image URL</label>
        <InputText @bind-Value="pet.ImgURL">@pet.ImgURL</InputText>
        <br />
        <button type="submit" class="btn btn-primary">Submit</button>

    </EditForm>
    @if (showConfirmationModal)
{
    <div class="modal fade show" id="confirmationModal" tabindex="-1" role="dialog" style="display: block;">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmation</h5>
                    <button type="button" class="btn-close" @onclick="CloseConfirmationModal"></button>
                </div>
                <div class="modal-body">
                    The pet has been updated!
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="ReturnToAvailablePets">OK</button>
                </div>
            </div>
        </div>
    </div>
}



@code {
    private bool showConfirmationModal = false;
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    Pet pet { get; set; } = new Pet { Type = string.Empty, Breed = string.Empty, Age = 0, DateAvailable = string.Empty, Price = 0, Name = string.Empty, ImgURL = string.Empty };

    async Task HandleSubmit()
    {
        await PetService.EditPet(Id, pet);
        showConfirmationModal = true;
    }

    private void CloseConfirmationModal()
    {
        showConfirmationModal = false;
    }

    private void ReturnToAvailablePets()
    {
        showConfirmationModal = false;
        NavigationManager.NavigateTo("/availablePets");
    }

    protected override async Task OnInitializedAsync()
    {
        pet = await PetService.GetPetById(Id);

    }
}



